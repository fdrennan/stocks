{"ast":null,"code":"import _slicedToArray from \"/Users/fdrennan/WebstormProjects/newStockAPI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport var useFetch = function useFetch(url, initialValue) {\n  console.log(\"Inside useFetch\");\n  console.log(url);\n  console.log(initialValue);\n\n  var _useState = useState(initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  console.log(\"Result 1\");\n  console.log(result);\n\n  if (initialValue) {\n    console.log(\"Iniside useFetch:initialValue\");\n    useEffect(function () {\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return setResult(json);\n      });\n    }, []);\n  }\n\n  console.log(\"Result 2\");\n  console.log(result);\n  return result;\n};","map":{"version":3,"sources":["/Users/fdrennan/WebstormProjects/newStockAPI/src/hooks.js"],"names":["useState","useEffect","useFetch","url","initialValue","console","log","result","setResult","fetch","then","response","json"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMC,YAAN,EAAuB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAH6C,kBAIjBJ,QAAQ,CAACI,YAAD,CAJS;AAAA;AAAA,MAItCG,MAJsC;AAAA,MAI9BC,SAJ8B;;AAK7CH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;;AACA,MAAIH,YAAJ,EAAkB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAL,IAAAA,SAAS,CAAC,YAAM;AACdQ,MAAAA,KAAK,CAACN,GAAD,CAAL,CACGO,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAE,IAAI;AAAA,eAAIJ,SAAS,CAACI,IAAD,CAAb;AAAA,OAFZ;AAGD,KAJQ,EAIN,EAJM,CAAT;AAKD;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,SAAOA,MAAP;AACD,CAlBM","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useFetch = (url, initialValue) => {\n  console.log(\"Inside useFetch\");\n  console.log(url);\n  console.log(initialValue);\n  const [result, setResult] = useState(initialValue);\n  console.log(\"Result 1\");\n  console.log(result);\n  if (initialValue) {\n    console.log(\"Iniside useFetch:initialValue\");\n    useEffect(() => {\n      fetch(url)\n        .then(response => response.json())\n        .then(json => setResult(json));\n    }, []);\n  }\n  console.log(\"Result 2\");\n  console.log(result);\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}