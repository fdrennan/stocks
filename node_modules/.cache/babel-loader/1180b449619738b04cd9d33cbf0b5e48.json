{"ast":null,"code":"var _jsxFileName = \"/Users/fdrennan/WebstormProjects/newStockAPI/src/Joke.js\";\nimport React from 'react';\nimport { useFetch } from './hooks';\nvar PORT = 6287;\nvar baseUrl = \"http://127.0.0.1:\".concat(PORT, \"/get_stocks_data?stocks=[\\\"\", 'AAPL', \"\\\"]&startDate=\", '2019-01-01', \"&endDate=\", '2019-02-01');\n\nfunction Joke() {\n  var _useFetch = useFetch(baseUrl, {}),\n      message = _useFetch.message,\n      data = _useFetch.data;\n\n  console.log(data);\n\n  var cleanData = function cleanData(data) {\n    if (data) {\n      var frame = JSON.parse(data).map(function (x) {\n        return React.createElement(\"table\", {\n          key: x.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, x.date), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, x.open), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, x.high), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, x.low), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, x.close), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, x.volume), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, x.adjusted)));\n      });\n      return frame;\n    }\n  };\n\n  var parsedData = cleanData(data);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Joke of the session\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, message)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Open\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"High\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Low\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Volume\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Adjusted\")), parsedData));\n}\n\nexport default Joke;","map":{"version":3,"sources":["/Users/fdrennan/WebstormProjects/newStockAPI/src/Joke.js"],"names":["React","useFetch","PORT","baseUrl","Joke","message","data","console","log","cleanData","frame","JSON","parse","map","x","date","open","high","low","close","volume","adjusted","parsedData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,IAAMC,IAAI,GAAG,IAAb;AAEA,IAAIC,OAAO,8BAAuBD,IAAvB,iCAAwD,MAAxD,oBAA8E,YAA9E,eAAsG,YAAtG,CAAX;;AAEA,SAASE,IAAT,GAAgB;AAAA,kBACYH,QAAQ,CAACE,OAAD,EAAU,EAAV,CADpB;AAAA,MACNE,OADM,aACNA,OADM;AAAA,MACGC,IADH,aACGA,IADH;;AAEdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAH,IAAI,EAAI;AACxB,QAAIA,IAAJ,EAAU;AACR,UAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAX,EAAiBO,GAAjB,CACV,UAACC,CAAD,EAAO;AACL,eAAO;AAAO,UAAA,GAAG,EAAIA,CAAC,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,CAAC,CAACC,IAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,CAAC,CAACE,IAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,CAAC,CAACG,IAAP,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,CAAC,CAACI,GAAP,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,CAAC,CAACK,KAAP,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKL,CAAC,CAACM,MAAP,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKN,CAAC,CAACO,QAAP,CAPF,CADK,CAAP;AAWD,OAbS,CAAd;AAeA,aAAOX,KAAP;AACD;AACF,GAnBD;;AAqBA,MAAMY,UAAU,GAAGb,SAAS,CAACH,IAAD,CAA5B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAL,CAAH,CAFF,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,EAUGiB,UAVH,CAJR,CADF;AAoBD;;AAED,eAAelB,IAAf","sourcesContent":["import React from 'react';\nimport { useFetch } from './hooks';\n\nconst PORT = 6287;\n\nlet baseUrl = `http://127.0.0.1:${PORT}/get_stocks_data?stocks=[\"${'AAPL'}\"]&startDate=${'2019-01-01'}&endDate=${'2019-02-01'}`;\n\nfunction Joke() {\n  const { message, data } = useFetch(baseUrl, {});\n  console.log(data);\n  const cleanData = data => {\n    if (data) {\n      const frame = JSON.parse(data).map(\n          (x) => {\n            return <table key = {x.date}>\n              <tr>\n                <th>{x.date}</th>\n                <th>{x.open}</th>\n                <th>{x.high}</th>\n                <th>{x.low}</th>\n                <th>{x.close}</th>\n                <th>{x.volume}</th>\n                <th>{x.adjusted}</th>\n              </tr>\n            </table>\n          }\n      );\n      return frame\n    }\n  };\n\n  const parsedData = cleanData(data);\n\n  return (\n    <div>\n      <h3>Joke of the session</h3>\n      <p><em>{message}</em></p>\n          {\n            <div>\n              <tr>\n                <th>Date</th>\n                <th>Open</th>\n                <th>High</th>\n                <th>Low</th>\n                <th>Close</th>\n                <th>Volume</th>\n                <th>Adjusted</th>\n              </tr>\n              {parsedData}\n            </div>\n          }\n    </div>\n  )\n}\n\nexport default Joke;\n"]},"metadata":{},"sourceType":"module"}