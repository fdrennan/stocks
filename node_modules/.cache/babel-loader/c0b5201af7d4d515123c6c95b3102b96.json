{"ast":null,"code":"var _jsxFileName = \"/Users/fdrennan/WebstormProjects/newStockAPI/src/DataTable.js\";\nimport React from \"react\";\nimport { useFetch } from \"./hooks\";\nimport { CSVLink } from \"react-csv\";\n\nfunction DataTable(props) {\n  var cleanData = function cleanData(data) {\n    console.log(\"Inside cleanData\");\n\n    if (data) {\n      console.log(\"Inside cleanData:if(data)\");\n      var parseData = JSON.parse(data);\n      var sortedData = parseData.sort(function (a, b) {\n        if (a.date < b.date) return 1;\n        if (b.date < a.date) return -1;\n        return 0;\n      });\n      var dataMap = sortedData.map(function (x, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          key: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, x.date), React.createElement(\"td\", {\n          key: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, x.open), React.createElement(\"td\", {\n          key: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, x.high), React.createElement(\"td\", {\n          key: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, x.low), React.createElement(\"td\", {\n          key: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, x.close), React.createElement(\"td\", {\n          key: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, x.volume), React.createElement(\"td\", {\n          key: 7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, x.adjusted));\n      });\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: \"tbody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        key: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"td\", {\n        key: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"td\", {\n        key: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"High\"), React.createElement(\"td\", {\n        key: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Low\"), React.createElement(\"td\", {\n        key: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"td\", {\n        key: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Volume\"), React.createElement(\"td\", {\n        key: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Adjusted\")), dataMap));\n    }\n  };\n\n  var json2array = function json2array(json) {\n    console.log(\"Inside json2array\");\n    var result = [];\n    var keys = Object.keys(json);\n    keys.forEach(function (key) {\n      result.push(json[key]);\n    });\n    return result;\n  };\n\n  var jsonToCSV = function jsonToCSV(data) {\n    console.log(\"Inside jsonToCSV\");\n\n    if (data) {\n      console.log(\"Inside jsonToCSV:data\");\n      var returnedData = JSON.parse(data);\n      return json2array(returnedData);\n    }\n  };\n\n  var parsedData = cleanData(data);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, data ? React.createElement(CSVLink, {\n    data: jsonToCSV(data),\n    filename: \"stock-data.csv\",\n    target: \"data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Download Me\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, message)), parsedData);\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/Users/fdrennan/WebstormProjects/newStockAPI/src/DataTable.js"],"names":["React","useFetch","CSVLink","DataTable","props","cleanData","data","console","log","parseData","JSON","parse","sortedData","sort","a","b","date","dataMap","map","x","index","open","high","low","close","volume","adjusted","json2array","json","result","keys","Object","forEach","key","push","jsonToCSV","returnedData","parsedData","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAExB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI,EAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AAEA,QAAIF,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAlB;AAEA,UAAMM,UAAU,GAAGH,SAAS,CAACI,IAAV,CAAe,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC/C,YAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;AACrB,YAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB,OAAO,CAAC,CAAR;AACrB,eAAO,CAAP;AACD,OAJkB,CAAnB;AAMA,UAAMC,OAAO,GAAGL,UAAU,CAACM,GAAX,CAAe,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC3C,eACE;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaD,CAAC,CAACH,IAAf,CADF,EAEE;AAAI,UAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaG,CAAC,CAACE,IAAf,CAFF,EAGE;AAAI,UAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaF,CAAC,CAACG,IAAf,CAHF,EAIE;AAAI,UAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaH,CAAC,CAACI,GAAf,CAJF,EAKE;AAAI,UAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaJ,CAAC,CAACK,KAAf,CALF,EAME;AAAI,UAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaL,CAAC,CAACM,MAAf,CANF,EAOE;AAAI,UAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaN,CAAC,CAACO,QAAf,CAPF,CADF;AAWD,OAZe,CAAhB;AAcA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,GAAG,EAAE,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF,EAUGT,OAVH,CADF,CADF;AAgBD;AACF,GA5CD;;AA8CA,MAAMU,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACzBrB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAIqB,MAAM,GAAG,EAAb;AACA,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,IAAZ,CAAX;AACAE,IAAAA,IAAI,CAACE,OAAL,CAAa,UAASC,GAAT,EAAc;AACzBJ,MAAAA,MAAM,CAACK,IAAP,CAAYN,IAAI,CAACK,GAAD,CAAhB;AACD,KAFD;AAIA,WAAOJ,MAAP;AACD,GATD;;AAWA,MAAMM,SAAS,GAAG,SAAZA,SAAY,CAAA7B,IAAI,EAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,QAAIF,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAM4B,YAAY,GAAG1B,IAAI,CAACC,KAAL,CAAWL,IAAX,CAArB;AACA,aAAOqB,UAAU,CAACS,YAAD,CAAjB;AACD;AACF,GAPD;;AASA,MAAMC,UAAU,GAAGhC,SAAS,CAACC,IAAD,CAA5B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,GACH,oBAAC,OAAD;AACE,IAAA,IAAI,EAAE6B,SAAS,CAAC7B,IAAD,CADjB;AAEE,IAAA,QAAQ,EAAE,gBAFZ;AAGE,IAAA,MAAM,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADG,GASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKgC,OAAL,CADF,CAVJ,EAcGD,UAdH,CADF;AAkBD;;AAED,eAAelC,SAAf","sourcesContent":["import React from \"react\";\nimport { useFetch } from \"./hooks\";\nimport { CSVLink } from \"react-csv\";\n\nfunction DataTable(props) {\n\n  const cleanData = data => {\n    console.log(\"Inside cleanData\");\n    \n    if (data) {\n      console.log(\"Inside cleanData:if(data)\");\n      const parseData = JSON.parse(data);\n\n      const sortedData = parseData.sort(function(a, b) {\n        if (a.date < b.date) return 1;\n        if (b.date < a.date) return -1;\n        return 0;\n      });\n\n      const dataMap = sortedData.map((x, index) => {\n        return (\n          <tr key={index}>\n            <td key={1}>{x.date}</td>\n            <td key={2}>{x.open}</td>\n            <td key={3}>{x.high}</td>\n            <td key={4}>{x.low}</td>\n            <td key={5}>{x.close}</td>\n            <td key={6}>{x.volume}</td>\n            <td key={7}>{x.adjusted}</td>\n          </tr>\n        );\n      });\n\n      return (\n        <table>\n          <tbody>\n            <tr key={\"tbody\"}>\n              <td key={1}>Date</td>\n              <td key={2}>Open</td>\n              <td key={3}>High</td>\n              <td key={4}>Low</td>\n              <td key={5}>Close</td>\n              <td key={6}>Volume</td>\n              <td key={7}>Adjusted</td>\n            </tr>\n            {dataMap}\n          </tbody>\n        </table>\n      );\n    }\n  };\n\n  const json2array = json => {\n    console.log(\"Inside json2array\");\n    let result = [];\n    let keys = Object.keys(json);\n    keys.forEach(function(key) {\n      result.push(json[key]);\n    });\n\n    return result;\n  };\n\n  const jsonToCSV = data => {\n    console.log(\"Inside jsonToCSV\");\n    if (data) {\n      console.log(\"Inside jsonToCSV:data\");\n      const returnedData = JSON.parse(data);\n      return json2array(returnedData);\n    }\n  };\n\n  const parsedData = cleanData(data);\n\n  return (\n    <div>\n      {data ? (\n        <CSVLink\n          data={jsonToCSV(data)}\n          filename={\"stock-data.csv\"}\n          target=\"data\"\n        >\n          Download Me\n        </CSVLink>\n      ) : (\n        <p>\n          <em>{message}</em>\n        </p>\n      )}\n      {parsedData}\n    </div>\n  );\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}