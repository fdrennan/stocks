{"ast":null,"code":"import _toConsumableArray from \"/Users/fdrennan/WebstormProjects/newStockAPI/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/fdrennan/WebstormProjects/newStockAPI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fdrennan/WebstormProjects/newStockAPI/src/App.js\";\nimport React, { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Form from \"./Form\";\nimport Images from \"./Images\";\nimport SearchHistory from \"./SearchHistory\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./layout/Navbar\";\n\nvar practice = function practice() {\n  var input = \"AAPL, DJIA\".split(\",\").map(function (x) {\n    return x.trim();\n  });\n  var jsonOutput = JSON.stringify(input);\n  console.log(jsonOutput);\n};\n\npractice(); // Global starting variables\n\nvar PORT = 8368;\n\nfunction App() {\n  // Starting Function\n  var baseUrlCreator = function baseUrlCreator(port, ticker, startDate, endDate, image) {\n    console.log(\"\\n\\n\\n\\nInside baseUrlCreator\");\n    var cleanTicker = ticker.split(\",\").map(function (x) {\n      return x.trim();\n    });\n    cleanTicker = JSON.stringify(cleanTicker);\n\n    if (image) {\n      return \"http://127.0.0.1:\".concat(port, \"/get_stocks?stocks=\").concat(cleanTicker, \"&startDate=\").concat(startDate, \"&endDate=\").concat(endDate);\n    } else {\n      return \"http://127.0.0.1:\".concat(port, \"/get_stocks_data?stocks=\").concat(cleanTicker, \"&startDate=\").concat(startDate, \"&endDate=\").concat(endDate);\n    }\n  }; // APPLICATION STARTING VARIABLES\n\n\n  var _useState = useState(\"AAPL\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userQuery = _useState2[0],\n      setUserQuery = _useState2[1];\n\n  var _useState3 = useState(\"2019-01-01\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userStartDate = _useState4[0],\n      setUserStartDate = _useState4[1];\n\n  var _useState5 = useState(\"2019-03-01\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userEndDate = _useState6[0],\n      setUserEndDate = _useState6[1];\n\n  var initialBaseUrl = baseUrlCreator(PORT, userQuery, userStartDate, userEndDate, false);\n  var initialBaseUrlImage = baseUrlCreator(PORT, userQuery, userStartDate, userEndDate, true);\n\n  var _useState7 = useState(initialBaseUrl),\n      _useState8 = _slicedToArray(_useState7, 2),\n      baseUrl = _useState8[0],\n      setBaseUrl = _useState8[1];\n\n  var _useState9 = useState(initialBaseUrlImage),\n      _useState10 = _slicedToArray(_useState9, 2),\n      baseUrlImage = _useState10[0],\n      setBaseUrlImage = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      priorSearches = _useState12[0],\n      setPriorSearches = _useState12[1];\n\n  var searchQuery = function searchQuery() {\n    console.log(\"Inside searchQuery\");\n    var newBaseUrl = baseUrlCreator(PORT, userQuery, userStartDate, userEndDate, false);\n    var newBaseUrlImage = baseUrlCreator(PORT, userQuery, userStartDate, userEndDate, true); // #1\n\n    setBaseUrl(newBaseUrl);\n    setBaseUrlImage(newBaseUrlImage); // #2\n\n    setPriorSearches([].concat(_toConsumableArray(priorSearches), [newBaseUrl]));\n  };\n\n  var NotFoundPage = function NotFoundPage() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"404 NOT FOUND\");\n  };\n\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    navTitle: \"Stock Application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Form, {\n    searchQuery: searchQuery,\n    userQuery: userQuery,\n    userStartDate: userStartDate,\n    setUserStartDate: setUserStartDate,\n    setUserEndDate: setUserEndDate,\n    userEndDate: userEndDate,\n    setUserQuery: setUserQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Images, {\n    baseUrlImage: baseUrlImage,\n    baseUrl: baseUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(DataTable, {\n    baseUrl: baseUrl,\n    setBaseUrl: setBaseUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(SearchHistory, {\n    priorSearches: priorSearches,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: Navbar,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Route, {\n    component: NotFoundPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fdrennan/WebstormProjects/newStockAPI/src/App.js"],"names":["React","useState","DataTable","Form","Images","SearchHistory","BrowserRouter","Route","Switch","Navbar","practice","input","split","map","x","trim","jsonOutput","JSON","stringify","console","log","PORT","App","baseUrlCreator","port","ticker","startDate","endDate","image","cleanTicker","userQuery","setUserQuery","userStartDate","setUserStartDate","userEndDate","setUserEndDate","initialBaseUrl","initialBaseUrlImage","baseUrl","setBaseUrl","baseUrlImage","setBaseUrlImage","priorSearches","setPriorSearches","searchQuery","newBaseUrl","newBaseUrlImage","NotFoundPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,KAAK,GAAG,aAAaC,KAAb,CAAmB,GAAnB,EAAwBC,GAAxB,CAA4B,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAA7B,CAAd;AACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAnB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD,CAJD;;AAMAN,QAAQ,G,CAER;;AACA,IAAMW,IAAI,GAAG,IAAb;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,MAAP,EAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA6C;AAClET,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEA,QAAIS,WAAW,GAAGJ,MAAM,CAACb,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KAAvB,CAAlB;AACAc,IAAAA,WAAW,GAAGZ,IAAI,CAACC,SAAL,CAAeW,WAAf,CAAd;;AACA,QAAID,KAAJ,EAAW;AACT,wCAA2BJ,IAA3B,gCAAqDK,WAArD,wBAA8EH,SAA9E,sBAAmGC,OAAnG;AACD,KAFD,MAEO;AACL,wCAA2BH,IAA3B,qCAA0DK,WAA1D,wBAAmFH,SAAnF,sBAAwGC,OAAxG;AACD;AACF,GAVD,CAFa,CAcb;;;AAda,kBAeqB1B,QAAQ,CAAC,MAAD,CAf7B;AAAA;AAAA,MAeN6B,SAfM;AAAA,MAeKC,YAfL;;AAAA,mBAgB6B9B,QAAQ,CAAC,YAAD,CAhBrC;AAAA;AAAA,MAgBN+B,aAhBM;AAAA,MAgBSC,gBAhBT;;AAAA,mBAiByBhC,QAAQ,CAAC,YAAD,CAjBjC;AAAA;AAAA,MAiBNiC,WAjBM;AAAA,MAiBOC,cAjBP;;AAkBb,MAAMC,cAAc,GAAGb,cAAc,CACnCF,IADmC,EAEnCS,SAFmC,EAGnCE,aAHmC,EAInCE,WAJmC,EAKnC,KALmC,CAArC;AAOA,MAAMG,mBAAmB,GAAGd,cAAc,CACxCF,IADwC,EAExCS,SAFwC,EAGxCE,aAHwC,EAIxCE,WAJwC,EAKxC,IALwC,CAA1C;;AAzBa,mBAgCiBjC,QAAQ,CAACmC,cAAD,CAhCzB;AAAA;AAAA,MAgCNE,OAhCM;AAAA,MAgCGC,UAhCH;;AAAA,mBAiC2BtC,QAAQ,CAACoC,mBAAD,CAjCnC;AAAA;AAAA,MAiCNG,YAjCM;AAAA,MAiCQC,eAjCR;;AAAA,oBAkC6BxC,QAAQ,CAAC,EAAD,CAlCrC;AAAA;AAAA,MAkCNyC,aAlCM;AAAA,MAkCSC,gBAlCT;;AAoCb,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBzB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAMyB,UAAU,GAAGtB,cAAc,CAC/BF,IAD+B,EAE/BS,SAF+B,EAG/BE,aAH+B,EAI/BE,WAJ+B,EAK/B,KAL+B,CAAjC;AAOA,QAAMY,eAAe,GAAGvB,cAAc,CACpCF,IADoC,EAEpCS,SAFoC,EAGpCE,aAHoC,EAIpCE,WAJoC,EAKpC,IALoC,CAAtC,CATwB,CAgBxB;;AACAK,IAAAA,UAAU,CAACM,UAAD,CAAV;AACAJ,IAAAA,eAAe,CAACK,eAAD,CAAf,CAlBwB,CAmBxB;;AACAH,IAAAA,gBAAgB,8BAAKD,aAAL,IAAoBG,UAApB,GAAhB;AACD,GArBD;;AAuBA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,GAFD;;AAIA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AACE,IAAA,WAAW,EAAEH,WADf;AAEE,IAAA,SAAS,EAAEd,SAFb;AAGE,IAAA,aAAa,EAAEE,aAHjB;AAIE,IAAA,gBAAgB,EAAEC,gBAJpB;AAKE,IAAA,cAAc,EAAEE,cALlB;AAME,IAAA,WAAW,EAAED,WANf;AAOE,IAAA,YAAY,EAAEH,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAES,YAAtB;AAAoC,IAAA,OAAO,EAAEF,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEA,OAApB;AAA6B,IAAA,UAAU,EAAEC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEG,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAmBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAEjC,MAFb;AAGE,IAAA,KAAK,EAAE,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEsC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAnBF,CADF;AA8BD;;AAED,eAAezB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Form from \"./Form\";\nimport Images from \"./Images\";\nimport SearchHistory from \"./SearchHistory\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./layout/Navbar\";\n\nconst practice = () => {\n  const input = \"AAPL, DJIA\".split(\",\").map(x => x.trim());\n  const jsonOutput = JSON.stringify(input);\n  console.log(jsonOutput);\n};\n\npractice();\n\n// Global starting variables\nconst PORT = 8368;\n\nfunction App() {\n  // Starting Function\n  const baseUrlCreator = (port, ticker, startDate, endDate, image) => {\n    console.log(\"\\n\\n\\n\\nInside baseUrlCreator\");\n\n    let cleanTicker = ticker.split(\",\").map(x => x.trim());\n    cleanTicker = JSON.stringify(cleanTicker);\n    if (image) {\n      return `http://127.0.0.1:${port}/get_stocks?stocks=${cleanTicker}&startDate=${startDate}&endDate=${endDate}`;\n    } else {\n      return `http://127.0.0.1:${port}/get_stocks_data?stocks=${cleanTicker}&startDate=${startDate}&endDate=${endDate}`;\n    }\n  };\n\n  // APPLICATION STARTING VARIABLES\n  const [userQuery, setUserQuery] = useState(\"AAPL\");\n  const [userStartDate, setUserStartDate] = useState(\"2019-01-01\");\n  const [userEndDate, setUserEndDate] = useState(\"2019-03-01\");\n  const initialBaseUrl = baseUrlCreator(\n    PORT,\n    userQuery,\n    userStartDate,\n    userEndDate,\n    false\n  );\n  const initialBaseUrlImage = baseUrlCreator(\n    PORT,\n    userQuery,\n    userStartDate,\n    userEndDate,\n    true\n  );\n  const [baseUrl, setBaseUrl] = useState(initialBaseUrl);\n  const [baseUrlImage, setBaseUrlImage] = useState(initialBaseUrlImage);\n  const [priorSearches, setPriorSearches] = useState([]);\n\n  const searchQuery = () => {\n    console.log(\"Inside searchQuery\");\n    const newBaseUrl = baseUrlCreator(\n      PORT,\n      userQuery,\n      userStartDate,\n      userEndDate,\n      false\n    );\n    const newBaseUrlImage = baseUrlCreator(\n      PORT,\n      userQuery,\n      userStartDate,\n      userEndDate,\n      true\n    );\n    // #1\n    setBaseUrl(newBaseUrl);\n    setBaseUrlImage(newBaseUrlImage);\n    // #2\n    setPriorSearches([...priorSearches, newBaseUrl]);\n  };\n\n  const NotFoundPage = () => {\n    return <div>404 NOT FOUND</div>;\n  };\n\n  return (\n    <BrowserRouter>\n      <Navbar navTitle={\"Stock Application\"} />\n      <hr />\n      <Form\n        searchQuery={searchQuery}\n        userQuery={userQuery}\n        userStartDate={userStartDate}\n        setUserStartDate={setUserStartDate}\n        setUserEndDate={setUserEndDate}\n        userEndDate={userEndDate}\n        setUserQuery={setUserQuery}\n      />\n      <hr />\n      <Images baseUrlImage={baseUrlImage} baseUrl={baseUrl} />\n      <hr />\n      <DataTable baseUrl={baseUrl} setBaseUrl={setBaseUrl} />\n      <hr />\n      <SearchHistory priorSearches={priorSearches} />\n      <hr />\n      <Switch>\n        <Route\n          path=\"/\"\n          component={Navbar}\n          exact={true}\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}